name: Deploy Shopify Theme

run-name: "Deploy Shopify Theme - ðŸ’» ${{ github.ref_name }} by ðŸ‘¤ ${{ github.actor }}"

on:
  push:
    branches:
      - main
      - develop
      - qa
  pull_request:
    branches:
      - main
      - qa
      - develop


jobs:

  deploy-dev-theme:
    name: Push Theme to Development
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

    environment: development

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2

      - name: Install Theme Check
        run: gem install theme-check

      - name: Run Theme Check
        run: |
          mkdir -p reports
          theme-check --fail-level error --output json > reports/theme-check-report.json || echo "Lint completed"

      - name: Convert JSON to SARIF
        run: |
          echo '{
            "version": "2.1.0",
            "runs": [
              {
                "tool": {
                  "driver": {
                    "name": "theme-check",
                    "informationUri": "https://github.com/Shopify/theme-check",
                    "rules": []
                  }
                },
                "results": []
              }
            ]
          }' > reports/theme-check.sarif

          ruby -rjson -e "
            data = JSON.parse(File.read('reports/theme-check-report.json'))
            sarif = JSON.parse(File.read('reports/theme-check.sarif'))
            rules = {}
            sarif['runs'][0]['results'] = data.map.with_index do |issue, i|
              rules[issue['check']] ||= {
                'id' => issue['check'],
                'name' => issue['check'],
                'shortDescription' => { 'text' => issue['message'] }
              }
              {
                'ruleId' => issue['check'],
                'level' => issue['severity'],
                'message' => { 'text' => issue['message'] },
                'locations' => [
                  {
                    'physicalLocation' => {
                      'artifactLocation' => { 'uri' => issue['file'] },
                      'region' => {
                        'startLine' => issue['line'] || 1,
                        'startColumn' => issue['column'] || 1
                      }
                    }
                  }
                ]
              }
            end
            sarif['runs'][0]['tool']['driver']['rules'] = rules.values
            File.write('reports/theme-check.sarif', JSON.pretty_generate(sarif))
          "

      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: reports/theme-check.sarif
      

      - name: Upload Lint Report
        uses: actions/upload-artifact@v4
        with:
          name: theme-check-report-${{ github.ref_name }}
          path: reports/theme-check-report.json


      - name: Push theme to Shopify
        env:
          SHOPIFY_FLAG_STORE: ${{ vars.SHOPIFY_FLAG_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_FLAG_THEME_ID: ${{ secrets.SHOPIFY_FLAG_THEME_ID }}
          SHOPIFY_FLAG_FORCE: 1
        run: |
          shopify theme push \
            --store $SHOPIFY_FLAG_STORE \
            --password $SHOPIFY_CLI_THEME_TOKEN \
            --theme $SHOPIFY_FLAG_THEME_ID \
            --allow-live \
            --json


  deploy-qa-theme:
    name: Push Theme to QA
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/qa')

    environment: qa

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli

      - name: Push theme to Shopify
        env:
          SHOPIFY_FLAG_STORE: ${{ vars.SHOPIFY_FLAG_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_FLAG_THEME_ID: ${{ secrets.SHOPIFY_FLAG_THEME_ID }}
          SHOPIFY_FLAG_FORCE: 1
        run: |
          shopify theme push \
            --store $SHOPIFY_FLAG_STORE \
            --password $SHOPIFY_CLI_THEME_TOKEN \
            --theme $SHOPIFY_FLAG_THEME_ID \
            --allow-live \
            --json

  deploy-prod-theme:
    name: Push & Publish Theme
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    environment: production

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli

      - name: Push theme to Shopify
        env:
          SHOPIFY_FLAG_STORE: ${{ vars.SHOPIFY_FLAG_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_FLAG_THEME_ID: ${{ secrets.SHOPIFY_FLAG_THEME_ID }}
          SHOPIFY_FLAG_FORCE: 1
        run: |
          shopify theme push \
            --store $SHOPIFY_FLAG_STORE \
            --password $SHOPIFY_CLI_THEME_TOKEN \
            --theme $SHOPIFY_FLAG_THEME_ID \
            --allow-live \
            --json

      - name: Publish theme (only on main)
        if: github.ref == 'refs/heads/main'
        env:
          SHOPIFY_FLAG_STORE: ${{ vars.SHOPIFY_FLAG_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_FLAG_THEME_ID: ${{ secrets.SHOPIFY_FLAG_THEME_ID }}
          SHOPIFY_FLAG_FORCE:      1
          SHOPIFY_FLAG_ALLOW_LIVE: 1
        run: |
          shopify theme publish \
            --store $SHOPIFY_FLAG_STORE \
            --password $SHOPIFY_CLI_THEME_TOKEN \
            --theme $SHOPIFY_FLAG_THEME_ID
