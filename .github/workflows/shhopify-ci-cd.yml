name: Deploy Shopify Theme

run-name: "Deploy Shopify Theme - ðŸ’» ${{ github.ref_name }} by ðŸ‘¤ ${{ github.actor }}"

on:
  push:
    branches:
      - main
      - develop
      - qa
  pull_request:
    branches:
      - main
      - qa
      - develop

permissions:
  contents: read
  security-events: write


jobs:

  deploy-dev-theme:
    name: Push Theme to Development
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

    environment: development

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2

      - name: Install Theme Check
        run: gem install theme-check

      - name: Run Theme Check
        run: |
          mkdir -p reports
          theme-check --fail-level error --output json > reports/theme-check-report.json || echo "Lint completed"

      - name: Convert JSON to SARIF
        run: |
          cat <<'EOF' > reports/theme-check.sarif
          {
            "version": "2.1.0",
            "runs": [
              {
                "tool": {
                  "driver": {
                    "name": "theme-check",
                    "informationUri": "https://github.com/Shopify/theme-check",
                    "rules": []
                  }
                },
                "results": []
              }
            ]
          }
          EOF

          ruby -rjson -e '
            data = JSON.parse(File.read("reports/theme-check-report.json"))
            sarif = JSON.parse(File.read("reports/theme-check.sarif"))

            # Ajusta esto si quieres que severity 2 sea "note" en vez de "warning"
            def sarif_level(sev)
              case sev.to_i
              when 0 then "note"     # p. ej. info / baja prioridad
              when 1 then "warning"  # sugerencias / advertencias
              when 2 then "warning"  # estilo / formato (puedes cambiar a "note" si lo prefieres)
              else "note"
              end
            end

            rules = {}
            results = []

            data.each do |file_obj|
              path = file_obj["path"].to_s.strip
              path = path.gsub(%r{^/}, "")
              path = "layout/theme.liquid" if path.empty?

              (file_obj["offenses"] || []).each do |off|
                rule_id = off["check"].to_s.strip
                rule_id = "theme-check-generic" if rule_id.empty?

                level = sarif_level(off["severity"])

                message = off["message"].to_s.strip
                message = "Theme Check reported an issue." if message.empty?

                start_line = off["start_row"].to_i > 0 ? off["start_row"].to_i : 1
                start_column = off["start_column"].to_i > 0 ? off["start_column"].to_i : 1

                rules[rule_id] ||= {
                  "id" => rule_id,
                  "name" => rule_id,
                  "shortDescription" => { "text" => message }
                }

                results << {
                  "ruleId" => rule_id,
                  "level" => level,
                  "message" => { "text" => message },
                  "locations" => [
                    {
                      "physicalLocation" => {
                        "artifactLocation" => {
                          "uri" => path,
                          "uriBaseId" => "%SRCROOT%"
                        },
                        "region" => {
                          "startLine" => start_line,
                          "startColumn" => start_column
                        }
                      }
                    }
                  ]
                }
              end
            end

            sarif["runs"][0]["tool"]["driver"]["rules"] = rules.values
            sarif["runs"][0]["results"] = results
            File.write("reports/theme-check.sarif", JSON.pretty_generate(sarif))
          '



      - name: Upload SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/theme-check.sarif

      

      - name: Upload Lint Report
        uses: actions/upload-artifact@v4
        with:
          name: theme-check-report-${{ github.ref_name }}
          path: reports/theme-check-report.json


      - name: Push theme to Shopify
        env:
          SHOPIFY_FLAG_STORE: ${{ vars.SHOPIFY_FLAG_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_FLAG_THEME_ID: ${{ secrets.SHOPIFY_FLAG_THEME_ID }}
          SHOPIFY_FLAG_FORCE: 1
        run: |
          shopify theme push \
            --store $SHOPIFY_FLAG_STORE \
            --password $SHOPIFY_CLI_THEME_TOKEN \
            --theme $SHOPIFY_FLAG_THEME_ID \
            --allow-live \
            --json


  deploy-qa-theme:
    name: Push Theme to QA
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/qa')

    environment: qa

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli

      - name: Push theme to Shopify
        env:
          SHOPIFY_FLAG_STORE: ${{ vars.SHOPIFY_FLAG_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_FLAG_THEME_ID: ${{ secrets.SHOPIFY_FLAG_THEME_ID }}
          SHOPIFY_FLAG_FORCE: 1
        run: |
          shopify theme push \
            --store $SHOPIFY_FLAG_STORE \
            --password $SHOPIFY_CLI_THEME_TOKEN \
            --theme $SHOPIFY_FLAG_THEME_ID \
            --allow-live \
            --json

  deploy-prod-theme:
    name: Push & Publish Theme
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    environment: production

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Shopify CLI
        run: npm install -g @shopify/cli

      - name: Push theme to Shopify
        env:
          SHOPIFY_FLAG_STORE: ${{ vars.SHOPIFY_FLAG_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_FLAG_THEME_ID: ${{ secrets.SHOPIFY_FLAG_THEME_ID }}
          SHOPIFY_FLAG_FORCE: 1
        run: |
          shopify theme push \
            --store $SHOPIFY_FLAG_STORE \
            --password $SHOPIFY_CLI_THEME_TOKEN \
            --theme $SHOPIFY_FLAG_THEME_ID \
            --allow-live \
            --json

      - name: Publish theme (only on main)
        if: github.ref == 'refs/heads/main'
        env:
          SHOPIFY_FLAG_STORE: ${{ vars.SHOPIFY_FLAG_STORE }}
          SHOPIFY_CLI_THEME_TOKEN: ${{ secrets.SHOPIFY_CLI_THEME_TOKEN }}
          SHOPIFY_FLAG_THEME_ID: ${{ secrets.SHOPIFY_FLAG_THEME_ID }}
          SHOPIFY_FLAG_FORCE:      1
          SHOPIFY_FLAG_ALLOW_LIVE: 1
        run: |
          shopify theme publish \
            --store $SHOPIFY_FLAG_STORE \
            --password $SHOPIFY_CLI_THEME_TOKEN \
            --theme $SHOPIFY_FLAG_THEME_ID
